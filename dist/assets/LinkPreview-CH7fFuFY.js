import{s as c,H as l,I as a,_ as p,t as d,r as u,o as k,c as m,a as _,z as f,b as v,d as y,n as w,u as h,j as L,C as P}from"./index-DH5bKGWT.js";const r=c(),D=l("linkPosts",{state:()=>({posts:[]}),actions:{async addLink(e,s){const{error:t}=await a.from("link_posts").insert({user_id:r.userId,username:r.username,title:e,url:s,order:0});if(t)return t;this.getLinkPosts()},async deleteLink(e){await a.from("link_posts").delete().eq("id",e),this.getLinkPosts()},async hideLink(e,s){const{error:t}=await a.from("link_posts").update({hidden:e}).eq("id",s);if(t)return t;this.getLinkPosts()},async getLinkPosts(e=r.username){const{data:s,error:t}=await a.from("link_posts").select().eq("username",e);if(t)return t;this.posts=s}}}),S={class:"link-preview__title"},b={__name:"LinkPreview",props:{postData:{type:Object,required:!0}},setup(e){const s=d(),t=e;let o=u(!1);const i=async()=>{try{await navigator.clipboard.writeText(t.postData.url),o.value=!0,setTimeout(()=>{o.value=!1},1e3)}catch{s.activateToast("error","Can not copy")}};return(n,g)=>e.postData.hidden?P("",!0):(k(),m("div",{key:0,class:w(["link-preview",{"link-preview--copied":h(o)}]),onClick:L(i,["prevent"])},[_("p",S,f(e.postData.title),1),v(y,{class:"link-preview__copy",name:"icon-copy"})],2))}},T=p(b,[["__scopeId","data-v-c2d3b366"]]);export{T as V,D as u};
